---
name: "msi"

on:
  push:
    tags: ''
    branches: master
  pull_request:
    branches: master
  workflow_dispatch:

env:  # echo "mary had a little lamb"|base64
  TETRATELABS_CERT_BASE64: "bWFyeSBoYWQgYSBsaXR0bGUgbGFtYgo="

defaults:
  run:  # use bash for all operating systems unless overridden
    shell: bash

jobs:
  msi:
    name: "Test Windows Installer build (${{ matrix.os }})"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  # don't fail fast as sometimes failures are operating system specific
      matrix:
        include:
          - os: ubuntu-latest
            # https://packages.ubuntu.com/focal/osslsigncode is old, but apt is less time than brew
            setup: sudo apt update -qq && sudo apt install -qq -y osslsigncode
          - os: macos-latest
            setup: brew install -q osslsigncode
          - os: windows-latest
            setup: |  # pacman is awkward, but windows binaries are attached to releases
              osslsigncode_version=2.1
              gh release download -R mtrojnar/osslsigncode ${osslsigncode_version} -p '*windows.zip'
              unzip -qq *.zip && rm *.zip
              echo "./osslsigncode_${osslsigncode_version}_windows" >> $GITHUB_PATH

    steps:
      - name: "Download unsigned func-e"
        run: |
          gh release download -R tetratelabs/func-e v0.6.0 -p '*_windows_amd64.zip'
          unzip -qq *.zip func-e.exe && rm *.zip
          test -f func-e.exe
        env: # `gh` requires auth even on public releases
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Setup osslsigncode"
        run: ${{ matrix.setup }}
        env:  # `gh` requires auth even on public releases
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Download Windows code signing certificate"
        id: p12
        uses: timheuer/base64-to-file@v1
        with:
          fileName: 'windows-certificate.pfx'
          encodedString: ${{ secrets.WINDOWS_CODESIGN_P12_BASE64 }}

      - name: "Sign func-e.exe"
        run: |
          osslsigncode sign -h sha256 -pkcs12 ${WINDOWS_CODESIGN_P12} -pass "${WINDOWS_CODESIGN_PASSWORD}" \
              -n "func-e makes running EnvoyÂ® easy" -i https://func-e.io -t http://timestamp.digicert.com \
              -in func-e.exe -out func-e-signed.exe && mv func-e-signed.exe func-e.exe
        env:
          WINDOWS_CODESIGN_P12: ${{ steps.p12.outputs.filePath }}
          WINDOWS_CODESIGN_PASSWORD: ${{ secrets.WINDOWS_CODESIGN_PASSWORD }}

